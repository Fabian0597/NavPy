# Log execution times of critical operations.
log_times: False

# Return debugging messages to the terminal.
debug_mode: False

# Show a representation of the local path in rviz.
show_path: True

# Lookahead for motion update.
lookahead: 2.5

robot_diameter: 0.45
safety_distance: 0.15

# To avoid oscillating.
min_ang_vel_change: 0.05

# Min and max velocity values of the rto.
min_linear_vel: 0 # Unit: m/s
max_linear_vel: 0.2 # Unit: m/s
min_angular_vel: -1 # Unit: rad/s
max_angular_vel: 1  # Unit: rad/s

# Max acceleration and deceleration that can be achieved by the rto.
max_acc: 0.3 # Since resolution of global path is 0.05 m => at 10 Hz we can drive a max of  3 cm if robot standing still. 
max_dec: 0.4 # Unit: m/s^2, rad/s^2

# Resolution of the dynamic window.
res_ang_vel_space: 10
res_lin_vel_space: 10

# Gain factors for calculation of the cost for each trajectory.
gain_vel: 20
gain_goal_angle: 2
gain_glob_path: 80
gain_clearance: 1

# versions:
# v1: 20 10 100 0 -> follows path good, but sometimes local minima (rotate to goal and no lin vel)
# v2: 50 10 100 0 -> no local minima but makes too big turn radius (not thoroughly tested)
# v3: 20 1  80  0 -> seems to have np local minima, relative decent turning radius and relative constant lin vel (best so far, not thoroughly tested)
# v4: 20 2  80  0 -> GOOD VERSION W/O ACTIVE OBSTACLE AVOIDANCE
# v5: 20 2  80  20 -> seems to work normal. Robot does not crash any obstacles, but avoidance in not working (just stays)
# v6: 20 2  40  20 -> does not stay on path as much and avoidance is still not working
# v7: 20 2  10  20 -> obstacle avoidance seems to work quite well, but robot is too off of path most at time and not very 'goal driven' and avoids obstacles too m
# v8: 20 4  20  20 -> obstacle avoidance does not work good, somtimes strange things happen
# v9: 20 6  15  20 -> does not reach goal if close to obstacle, rather drives 10cm besides goal.
# v10: 20 8 15  20 -> same problem, bit better 
# v11: 20 8 18  20 
# angular vel 0.9 (before 0.7)
# v12: 20 8 18  20 -> problem solved, but still doesn't stick to the path as much and doesnt avoid obstacles.
# angular vel 1
# v12: 20 12 15 20 -> too far away from the path in some cases; other than that (normal traffic) seems to work most of the times
# v13: 20 12 15 15 -> works ok for normal planning and easy collission avoidance
# v14: 18 12 15 15 -> GOOD VERSION reason: robot speed increeses when close to goal and speed small (result: better now)
# v15: 40 2 80 0  -> seems to be able to cope with extreme situations; problems with reaching goal at 5 cm
# v16: 15 2 80 0  -> good version but also once only looked to the goal and sometimes cant reach goal at 5 cm
# v17: 20 2 80 0 -> GOOD VERSION, seems to reach goal pretty good and also no local minima so far 
# v18: 20 2 80 10 -> no obstacle avoidance, 20, 30
# v19: 25 1 40 12 -> handels the left corner problem, but doesnt handle the ton problem.


# Parameters for recovery behaviours.
rec_min_lin_vel: 0.012
rec_min_lin_vel_time: 5 # Unit s

rec_circling_time: 10 # Unit s

rec_path_time_factor: 0.4 #0.4 #0.25
rec_path_length: 30 #40

# Distance from goal that is enough to declare goal reached
min_dist_goal: 0.1
